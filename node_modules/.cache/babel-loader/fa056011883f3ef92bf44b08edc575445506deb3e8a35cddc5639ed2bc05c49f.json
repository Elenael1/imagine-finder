{"ast":null,"code":"var _jsxFileName = \"/Users/elenal06/Downloads/image_finder-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ImageGallery from \"./components/images/imageGallery/ImageGallery\";\nimport { ProgressBar } from \"react-loader-spinner\";\nimport SearchBar from \"./components/searchbar/SearchBar\";\nimport Modal from \"./components/modal/Modal\";\nimport Pagination from \"./components/pagination/Pagination\";\nimport { request } from \"./API/Request\";\nimport searchIcon from './icons/icon-search.png';\nimport './App.css'; // Corrected the import statement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataInput, setDataInput] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [openModal, setOpenModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const updateImages = async () => {\n    try {\n      setIsLoading(true);\n      const data = await request(dataInput, page);\n      setImages(prevImages => [...prevImages, ...data]); // Use functional update to correctly update state based on previous state\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    updateImages();\n  }, [page, dataInput]); // Update images when page or dataInput changes\n\n  const plusPage = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const changeModal = () => {\n    setOpenModal(!openModal);\n  };\n  const getLargeImage = url => {\n    setLargeImage(url);\n    changeModal();\n  };\n  const plusInputValue = dataInput => {\n    setImages([]);\n    setPage(1);\n    setDataInput(dataInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      openModal: openModal,\n      changeModal: changeModal,\n      largeImage: largeImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      plusInputValue: plusInputValue,\n      searchIcon: searchIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(ProgressBar, {\n      height: 80,\n      width: 80,\n      ariaLabel: \"progress-bar-loading\",\n      wrapperStyle: {},\n      wrapperClass: \"progress-bar-wrapper\",\n      borderColor: \"#F4442E\",\n      barColor: \"#51E5FF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ImageGallery, {\n      data: images,\n      getLargeImage: getLargeImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      plusPage: plusPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2Yd8RvQhgtEXzPwcV0UEnaWYaSo=\");\n_c = App;\nexport default App;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import ImageGallery from \"./components/images/imageGallery/ImageGallery\";\n// import { ProgressBar } from \"react-loader-spinner\";\n// import SearchBar from \"./components/searchbar/SearchBar\";\n// import Modal from \"./components/modal/Modal\";\n// import Pagination from \"./components/pagination/Pagination\";\n// import { request } from \"./API/Request\";\n// import searchIcon from './icons/icon-search.png'\n// import './/App.css'\n\n// const App = () => {\n//   const [images, setImages] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [dataInput, setDataInput] = useState(\"\");\n//   const [page, setPage] = useState(1);\n//   const [openModal, setOpenModal] = useState(false);\n//   const [largeImage, setLargeImage] = useState(\"\");\n//   const [snapshot, setSnapshot] = useState(null);\n\n//   const updateImages = async() => {\n//         setIsLoading(true)\n//         const data= await request(dataInput, page);\n//         setImages([...images, ...data])\n//         setIsLoading(false)\n//       }\n\n//       useEffect(() => {\n//         updateImages()\n//       }, []) \n\n//       useEffect(() => {\n//         if (dataInput === \"\") return\n//         updateImages()\n//       }, [dataInput]);\n\n//       const plusPage = () => {\n//         setPage((prevState) => prevState + 1);\n\n//       };\n\n//       const changeModal = () => {\n//         setOpenModal(!openModal);\n// }; \n\n//       const getLargeImage = (url) => {\n//         setLargeImage(url)\n//         changeModal()\n//       }\n\n//       const plusInputValue = (dataInput) => {\n//         setImages([])\n//         setPage(1)\n//         setDataInput(dataInput)\n\n//       };\n\n//   return (\n//     <div className=\"App\">\n//        {openModal && <Modal openModal={openModal} changeModal={changeModal} largeImage={largeImage}/>}\n\n//        <SearchBar plusInputValue={plusInputValue} searchIcon={searchIcon}/>\n//        {isLoading === true ?  <ProgressBar\n//   height=\"80\"\n//   width=\"80\"\n//   ariaLabel=\"progress-bar-loading\"\n//   wrapperStyle={{}}\n//   wrapperClass=\"progress-bar-wrapper\"\n//   borderColor = '#F4442E'\n//   barColor = '#51E5FF'\n// /> :  <ImageGallery data={images} getLargeImage={getLargeImage}/> }\n// <Pagination plusPage={plusPage}/>\n\n//      </div>\n//   )\n// }\n\n// export default App\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ImageGallery","ProgressBar","SearchBar","Modal","Pagination","request","searchIcon","jsxDEV","_jsxDEV","App","_s","images","setImages","isLoading","setIsLoading","dataInput","setDataInput","page","setPage","openModal","setOpenModal","largeImage","setLargeImage","updateImages","data","prevImages","error","console","plusPage","prevPage","changeModal","getLargeImage","url","plusInputValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","_c","$RefreshReg$"],"sources":["/Users/elenal06/Downloads/image_finder-main/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ImageGallery from \"./components/images/imageGallery/ImageGallery\";\nimport { ProgressBar } from \"react-loader-spinner\";\nimport SearchBar from \"./components/searchbar/SearchBar\";\nimport Modal from \"./components/modal/Modal\";\nimport Pagination from \"./components/pagination/Pagination\";\nimport { request } from \"./API/Request\";\nimport searchIcon from './icons/icon-search.png';\nimport './App.css';  // Corrected the import statement\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataInput, setDataInput] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [openModal, setOpenModal] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n\n  const updateImages = async () => {\n    try {\n      setIsLoading(true);\n      const data = await request(dataInput, page);\n      setImages((prevImages) => [...prevImages, ...data]); // Use functional update to correctly update state based on previous state\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    updateImages();\n  }, [page, dataInput]); // Update images when page or dataInput changes\n\n  const plusPage = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const changeModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const getLargeImage = (url) => {\n    setLargeImage(url);\n    changeModal();\n  };\n\n  const plusInputValue = (dataInput) => {\n    setImages([]);\n    setPage(1);\n    setDataInput(dataInput);\n  };\n\n  return (\n    <div className=\"App\">\n      {openModal && <Modal openModal={openModal} changeModal={changeModal} largeImage={largeImage} />}\n\n      <SearchBar plusInputValue={plusInputValue} searchIcon={searchIcon} />\n      {isLoading ? (\n        <ProgressBar\n          height={80}\n          width={80}\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor='#F4442E'\n          barColor='#51E5FF'\n        />\n      ) : (\n        <ImageGallery data={images} getLargeImage={getLargeImage} />\n      )}\n      <Pagination plusPage={plusPage} />\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import ImageGallery from \"./components/images/imageGallery/ImageGallery\";\n// import { ProgressBar } from \"react-loader-spinner\";\n// import SearchBar from \"./components/searchbar/SearchBar\";\n// import Modal from \"./components/modal/Modal\";\n// import Pagination from \"./components/pagination/Pagination\";\n// import { request } from \"./API/Request\";\n// import searchIcon from './icons/icon-search.png'\n// import './/App.css'\n\n// const App = () => {\n//   const [images, setImages] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [dataInput, setDataInput] = useState(\"\");\n//   const [page, setPage] = useState(1);\n//   const [openModal, setOpenModal] = useState(false);\n//   const [largeImage, setLargeImage] = useState(\"\");\n//   const [snapshot, setSnapshot] = useState(null);\n\n\n//   const updateImages = async() => {\n//         setIsLoading(true)\n//         const data= await request(dataInput, page);\n//         setImages([...images, ...data])\n//         setIsLoading(false)\n//       }\n\n//       useEffect(() => {\n//         updateImages()\n//       }, []) \n\n//       useEffect(() => {\n//         if (dataInput === \"\") return\n//         updateImages()\n//       }, [dataInput]);\n\n//       const plusPage = () => {\n//         setPage((prevState) => prevState + 1);\n\n//       };\n\n      \n\n//       const changeModal = () => {\n//         setOpenModal(!openModal);\n// }; \n    \n    \n//       const getLargeImage = (url) => {\n//         setLargeImage(url)\n//         changeModal()\n//       }\n\n//       const plusInputValue = (dataInput) => {\n//         setImages([])\n//         setPage(1)\n//         setDataInput(dataInput)\n       \n    \n//       };\n\n//   return (\n//     <div className=\"App\">\n//        {openModal && <Modal openModal={openModal} changeModal={changeModal} largeImage={largeImage}/>}\n       \n//        <SearchBar plusInputValue={plusInputValue} searchIcon={searchIcon}/>\n//        {isLoading === true ?  <ProgressBar\n//   height=\"80\"\n//   width=\"80\"\n//   ariaLabel=\"progress-bar-loading\"\n//   wrapperStyle={{}}\n//   wrapperClass=\"progress-bar-wrapper\"\n//   borderColor = '#F4442E'\n//   barColor = '#51E5FF'\n// /> :  <ImageGallery data={images} getLargeImage={getLargeImage}/> }\n// <Pagination plusPage={plusPage}/>\n\n     \n      \n//      </div>\n//   )\n// }\n\n// export default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}